// automatically generated by the FlatBuffers compiler, do not modify

import { Shield } from './shield';
import { Sword } from './sword';


export enum Equipment {
  NONE = 0,
  Sword = 1,
  Shield = 2
}

export function unionToEquipment(
  type: Equipment,
  accessor: (obj:Shield|Sword) => Shield|Sword|null
): Shield|Sword|null {
  switch(Equipment[type]) {
    case 'NONE': return null; 
    case 'Sword': return accessor(new Sword())! as Sword;
    case 'Shield': return accessor(new Shield())! as Shield;
    default: return null;
  }
}

export function unionListToEquipment(
  type: Equipment, 
  accessor: (index: number, obj:Shield|Sword) => Shield|Sword|null, 
  index: number
): Shield|Sword|null {
  switch(Equipment[type]) {
    case 'NONE': return null; 
    case 'Sword': return accessor(index, new Sword())! as Sword;
    case 'Shield': return accessor(index, new Shield())! as Shield;
    default: return null;
  }
}
