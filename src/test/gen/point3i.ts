// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class Point3i implements flatbuffers.IUnpackableObject<Point3iT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Point3i {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

xyz(index: number):number|null {
    return this.bb!.readInt32(this.bb_pos + 0 + index * 4);
}

static sizeOf():number {
  return 12;
}

static createPoint3i(builder:flatbuffers.Builder, xyz: number[]|null):flatbuffers.Offset {
  builder.prep(4, 12);

  for (let i = 2; i >= 0; --i) {
    builder.writeInt32((xyz?.[i] ?? 0));

  }

  return builder.offset();
}


unpack(): Point3iT {
  return new Point3iT(
    this.bb!.createScalarList<number>(this.xyz.bind(this), 3)
  );
}


unpackTo(_o: Point3iT): void {
  _o.xyz = this.bb!.createScalarList<number>(this.xyz.bind(this), 3);
}
}

export class Point3iT implements flatbuffers.IGeneratedObject {
constructor(
  public xyz: (number)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return Point3i.createPoint3i(builder,
    this.xyz
  );
}
}
